##import the function
from utils import get_db_schema,call_euri_llm,execute_sql
from config import DATABASE_URI
import streamlit as st
from sqlalchemy import create_engine

##creation of streamlit app
st.set_page_config(
    page_title="SQL Assistant",
    page_icon="ðŸ§ ",
    layout="wide",        # wide or centered
    initial_sidebar_state="expanded"
)
st.title("ðŸ¤– SQL Assistant using EURI LLM")
st.write("Ask questions about your database and get SQL queries generated by an LLM!")
nl_query=st.text_input("Enter your question:")


##This code takes a natural language question, sends it to an LLM, generates a SQL query, executes it on your database, and shows the results in Streamlit.
if nl_query:
    engine = create_engine(DATABASE_URI)
    schema = get_db_schema(engine)

    with open("prompt_template.txt") as f:
        template = f.read()
    prompt = template.format(schema=schema, question=nl_query)

    with st.spinner("Generating SQL using EURI LLM..."):
        sql_query = call_euri_llm(prompt)

        

    st.code(sql_query, language="sql")

    try:
        results, columns = execute_sql(engine, sql_query)
        if results:
            st.dataframe(results, use_container_width=True)
        else:
            st.info("Query executed successfully. No data returned.")
    except Exception as e:
        st.error(f"Error running query: {e}")




